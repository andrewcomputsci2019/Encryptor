package com.andrew.Encryptor.EncryptorService;/*
 * Copyright (c) Andrew Pegg 2022.
 * All rights reversed
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import java.io.IOException;
import java.nio.file.Path;
import java.security.GeneralSecurityException;

public interface Encryptor {
    /**
     * Method to be implemented by all encryptor services
     * This method is responsible for decrypting the file and reporting back once it's finished with the process
     * @param file the file that is supposed to be encrypted, this method is non-destructive and only reads the file bytes
     * @return a File object pointing to the temporary file used by the application
     */
    Path decrypt(EncryptedFile file) throws IOException,GeneralSecurityException;

    /**
     * Method to be implemented by all encryptor services.
     * This method is responsible for encrypting the file and reporting back once it's finished with the process
     * @param file the file that is supposed to be encrypted, this method is non-destructive and only reads the file bytes
     * @return File object that points to the temporary file generated by method, a key file will also be generated under same name
     */
    PathPair<Path,Path> encrypt(EncryptedFile file) throws IOException, GeneralSecurityException;

}
